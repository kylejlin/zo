---
source: src/syntax_tree/parser/tests/match_.rs
expression: "&cst"
---
Match(
    Match {
        lparen: ByteIndex(
            1,
        ),
        matchee: Deb(
            NumberLiteral {
                value: 0,
                span: (
                    ByteIndex(
                        18,
                    ),
                    ByteIndex(
                        19,
                    ),
                ),
            },
        ),
        return_type: Deb(
            NumberLiteral {
                value: 3,
                span: (
                    ByteIndex(
                        25,
                    ),
                    ByteIndex(
                        26,
                    ),
                ),
            },
        ),
        cases_lparen: ByteIndex(
            45,
        ),
        cases: Snoc(
            Snoc(
                Snoc(
                    Nil,
                    Nondismissed(
                        NondismissedMatchCase {
                            lparen: ByteIndex(
                                55,
                            ),
                            arity: NumberLiteral {
                                value: 0,
                                span: (
                                    ByteIndex(
                                        56,
                                    ),
                                    ByteIndex(
                                        57,
                                    ),
                                ),
                            },
                            return_val: Deb(
                                NumberLiteral {
                                    value: 1,
                                    span: (
                                        ByteIndex(
                                            58,
                                        ),
                                        ByteIndex(
                                            59,
                                        ),
                                    ),
                                },
                            ),
                            rparen: ByteIndex(
                                59,
                            ),
                        },
                    ),
                ),
                Dismissed(
                    ByteIndex(
                        70,
                    ),
                ),
            ),
            Nondismissed(
                NondismissedMatchCase {
                    lparen: ByteIndex(
                        86,
                    ),
                    arity: NumberLiteral {
                        value: 1,
                        span: (
                            ByteIndex(
                                87,
                            ),
                            ByteIndex(
                                88,
                            ),
                        ),
                    },
                    return_val: Deb(
                        NumberLiteral {
                            value: 2,
                            span: (
                                ByteIndex(
                                    89,
                                ),
                                ByteIndex(
                                    90,
                                ),
                            ),
                        },
                    ),
                    rparen: ByteIndex(
                        90,
                    ),
                },
            ),
        ),
        cases_rparen: ByteIndex(
            96,
        ),
        rparen: ByteIndex(
            98,
        ),
    },
)
