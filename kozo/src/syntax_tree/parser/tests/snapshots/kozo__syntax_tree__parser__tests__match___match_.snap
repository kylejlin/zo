---
source: src/syntax_tree/parser/tests/match_.rs
expression: "&cst"
---
Match(
    Match {
        lparen: ByteIndex(
            1,
        ),
        matchee: Deb(
            NumberLiteral {
                value: 0,
                span: (
                    ByteIndex(
                        33,
                    ),
                    ByteIndex(
                        34,
                    ),
                ),
            },
        ),
        econ_extension_len: NumberLiteral {
            value: 1,
            span: (
                ByteIndex(
                    69,
                ),
                ByteIndex(
                    70,
                ),
            ),
        },
        return_type: Deb(
            NumberLiteral {
                value: 3,
                span: (
                    ByteIndex(
                        95,
                    ),
                    ByteIndex(
                        96,
                    ),
                ),
            },
        ),
        cases_lparen: ByteIndex(
            115,
        ),
        cases: Snoc(
            Snoc(
                Snoc(
                    Nil,
                    Nondismissed(
                        NondismissedMatchCase {
                            lparen: ByteIndex(
                                125,
                            ),
                            arity: NumberLiteral {
                                value: 0,
                                span: (
                                    ByteIndex(
                                        126,
                                    ),
                                    ByteIndex(
                                        127,
                                    ),
                                ),
                            },
                            return_val: Deb(
                                NumberLiteral {
                                    value: 1,
                                    span: (
                                        ByteIndex(
                                            128,
                                        ),
                                        ByteIndex(
                                            129,
                                        ),
                                    ),
                                },
                            ),
                            rparen: ByteIndex(
                                129,
                            ),
                        },
                    ),
                ),
                Dismissed(
                    ByteIndex(
                        140,
                    ),
                ),
            ),
            Nondismissed(
                NondismissedMatchCase {
                    lparen: ByteIndex(
                        156,
                    ),
                    arity: NumberLiteral {
                        value: 1,
                        span: (
                            ByteIndex(
                                157,
                            ),
                            ByteIndex(
                                158,
                            ),
                        ),
                    },
                    return_val: Deb(
                        NumberLiteral {
                            value: 2,
                            span: (
                                ByteIndex(
                                    159,
                                ),
                                ByteIndex(
                                    160,
                                ),
                            ),
                        },
                    ),
                    rparen: ByteIndex(
                        160,
                    ),
                },
            ),
        ),
        cases_rparen: ByteIndex(
            166,
        ),
        rparen: ByteIndex(
            168,
        ),
    },
)
